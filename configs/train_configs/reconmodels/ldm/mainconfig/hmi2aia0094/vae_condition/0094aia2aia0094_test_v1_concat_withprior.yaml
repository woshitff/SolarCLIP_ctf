model:
  base_learning_rate: 1.0e-04
  base_learning_optimizer: "Adam"
  base_learning_schedule: "CosineAnnealingLR"
  target: models.reconmodels.ldm.models.diffusion.ddpm.LatentDiffusion
  params:
    parameterization: "eps"
    linear_start: 0.00085
    linear_end: 0.0120
    log_every_t: 200
    timesteps: 100
    first_stage_key: "0094_image"
    cond_stage_key: "magnet_image"
    image_size: 64
    channels: 3
    cond_stage_trainable: false
    conditioning_key: concat
    scale_factor: 1
    monitor: val/loss_simple_ema
    use_ema: False

    unet_config:
      target: models.reconmodels.ldm.modules.diffusionmodules.dpmmodels.model.Model
      params:
        ch: 384
        out_ch: 3
        ch_mult:
          - 1
          - 2
          - 4
          - 4
        num_res_blocks: 2
        attn_resolutions: [ ]
        dropout: 0.0
        resamp_with_conv: true
        in_channels: 6
        resolution: 64
        use_timestep: true
        use_linear_attn: false
        attn_type: "vanilla"

    first_stage_config:
      target: models.reconmodels.autoencoder.models.vae.CNN_VAE.CNN_VAE
      params:
        ckpt_path: "checkpoints/reconmodels/vae/0094_0094/epoch=000399.ckpt"
        input_size: 1024
        image_channels: 1
        hidden_dim: 64
        layers: 2
        kernel_sizes: 
          - 7
          - 7
        strides: 
          - 4
          - 4
        group_nums: 16
        latent_dim: 3
        loss_type: MSE
        lambda_kl: 0.1
      lossconfig:
        target: torch.nn.Identity

    cond_stage_config: 
      target: models.reconmodels.ldm.modules.priors.vaepriors.ae.vit.vit_regressor
      params:
        ckpt_path: "checkpoints/reconmodels/ldm/prior/ae/hmi2aia0094_vaelatent_epoch=000079.ckpt"
        inputs_modal: 'magnet_image'
        targets_modal: '0094_image'
        in_channels: 3
        input_size: 64
        patch_size: 2
        width: 768
        heads: 12
        layers: 12
        drop_out: 0.1
        attn_mask: false
        loss_type: 'l2'
        
        inputs_config: 
          target: models.reconmodels.autoencoder.models.vae.CNN_VAE.CNN_VAE
          params:
            ckpt_path: "checkpoints/reconmodels/vae/magnet_magnet/layers_2_kernel_[7, 7]_strides_[4, 4]_middle_true_hidden_dim_64_kl_1e-1_epoch_1000.pt"
            vae_modal: 'magnet_image'
            input_size: 1024
            image_channels: 1
            hidden_dim: 64
            layers: 2
            kernel_sizes: 
              - 7
              - 7
            strides: 
              - 4
              - 4
            group_nums: 16
            latent_dim: 3
            loss_type: MSE
            lambda_kl: 0.1

        targets_config: 
          ckpt_path: "checkpoints/reconmodels/vae/0094_0094/epoch=000399.ckpt"
          target: models.reconmodels.autoencoder.models.vae.CNN_VAE.CNN_VAE
          params:
            vae_modal: '0094_image'
            input_size: 1024
            image_channels: 1
            hidden_dim: 64
            layers: 2
            kernel_sizes: 
              - 7
              - 7
            strides: 
              - 4
              - 4
            group_nums: 16
            latent_dim: 3
            loss_type: MSE
            lambda_kl: 0.1

data:
  target: data.build.DataModuleFromConfig
  params:
    batch_size: 2
    num_workers: 9
    wrap: false
    train:
      target: data.dataset.SolarDataset.multimodal_dataset
      params:
        modal_list: 
          - 'magnet'
          - '0094'
        load_imgs: false
        enhance_list:
          - 1024
          - 0.5
          - 90
        time_interval: 
          - 0
          - 5346720
        time_step: 115200
    validation:
      target: data.dataset.SolarDataset.multimodal_dataset
      params:
        modal_list: 
          - 'magnet'
          - '0094'
        load_imgs: false
        enhance_list:
          - 1024
          - 0.5
          - 90
        time_interval: 
          - 5346720
          - 7452000
        time_step: 115200

lightning:
  trainer:
    strategy: "ddp"
    accelerator: "gpu"
    devices: 4
    benchmark: True

  # callbacks:
  #   image_logger:
  #     target: train.utils.callback.ImageLogger
  #     params:
  #       batch_frequency: 5000
  #       max_images: 8
  #       increase_log_steps: False

  # logger:
  #   target: pytorch_lightning.loggers.TensorBoardLogger
  #   params:
  #     name: tensorboard_logs
  #     save_dir: logs

  